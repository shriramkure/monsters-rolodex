{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","CardList","className","monsters","map","monster","id","App","state","fetch","then","Response","json","users","setState","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEaA,G,YAAO,SAACC,GACjB,OAAO,8BACH,6BAAKA,EAAMC,WCANC,EAAW,SAACF,GACrB,OAAO,qBAAKG,UAAU,YAAf,SAECH,EAAMI,SAASC,KAAK,SAAAC,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCsBpBC,E,kDAxBb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXL,SAAU,IAJA,E,gEAQO,IAAD,OAClBM,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEX,SAAUU,S,+BAI1C,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CAAUC,SAAUY,KAAKP,MAAML,iB,GAnBrBa,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67e958e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Card = (props) => {\r\n    return <div>\r\n        <h1>{props.name}</h1>\r\n    </div>\r\n}","import React from 'react';\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n    return <div className=\"card-list\">\r\n        {\r\n            props.monsters.map( monster => (\r\n                <Card key={monster.id} monster={monster}></Card>\r\n            ))\r\n        } \r\n    </div>\r\n}","import './App.css';\nimport { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component'\n\nclass App extends Component{\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: []\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( Response => Response.json())\n    .then( users => this.setState({ monsters: users }) )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CardList monsters={this.state.monsters}>\n        </CardList>      \n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}